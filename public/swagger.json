{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"UserAudit": {
				"properties": {
					"user_id": {
						"type": "string",
						"description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
						"format": "uuid",
						"pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
					},
					"created": {
						"type": "string",
						"description": "When the user created the account",
						"format": "date"
					},
					"modified": {
						"type": "string",
						"description": "When the user modified any of the tracked fields.",
						"format": "date"
					},
					"username": {
						"type": "string",
						"description": "When the user modified his username.",
						"format": "date"
					},
					"forename": {
						"type": "string",
						"description": "When the user modified his forename.",
						"format": "date"
					},
					"surname": {
						"type": "string",
						"description": "When the user modified his surname.",
						"format": "date"
					},
					"email": {
						"type": "string",
						"description": "When the user modified his email.",
						"format": "date"
					},
					"hash": {
						"type": "string",
						"description": "When the user modified his hash.",
						"format": "date"
					},
					"billing": {
						"type": "string",
						"description": "When the user modified his billing data.",
						"format": "date"
					},
					"shipping": {
						"type": "string",
						"description": "When the user modified his shipping data.",
						"format": "date"
					},
					"quota": {
						"type": "string",
						"description": "When the user has change in quota.",
						"format": "date"
					}
				},
				"required": [
					"user_id",
					"created",
					"modified"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetAuditResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/UserAudit"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetEmailResponseData": {
				"properties": {
					"email": {
						"type": "string",
						"description": "The user's email",
						"example": "test@clippic.app",
						"maxLength": 200
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetEmailResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/GetEmailResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutEmailResponseData": {
				"properties": {
					"email": {
						"type": "string",
						"description": "The user's email",
						"example": "test@clippic.app",
						"maxLength": 200
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutEmailResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/PutEmailResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ClippicErrorInterface": {
				"properties": {
					"status": {
						"type": "string"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"items": {},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32"
					},
					"trace": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"code",
					"trace"
				],
				"type": "object",
				"additionalProperties": false
			},
			"AccountAlreadyExistsError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1023 | Error when email already registered for an other account."
			},
			"MailFormatError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1022 | Error when access mode is not valid."
			},
			"PutEmailRequest": {
				"description": "Update the users email",
				"properties": {
					"email": {
						"type": "string",
						"description": "The user's email",
						"example": "testnew@clippic.app",
						"minLength": 5,
						"maxLength": 200
					}
				},
				"required": [
					"email"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"email": "testnew@clippic.app"
				}
			},
			"GetForenameResponseData": {
				"properties": {
					"forename": {
						"type": "string",
						"description": "The user's forename",
						"example": "tester",
						"maxLength": 100
					}
				},
				"required": [
					"forename"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetForenameResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/GetForenameResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutForenameResponseData": {
				"properties": {
					"forename": {
						"type": "string",
						"description": "The user's forename",
						"example": "tester",
						"maxLength": 100
					}
				},
				"required": [
					"forename"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutForenameResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/PutForenameResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutForenameRequest": {
				"description": "Create or update the users forename",
				"properties": {
					"forename": {
						"type": "string",
						"description": "The user's forename",
						"example": "tester",
						"minLength": 1,
						"maxLength": 100
					}
				},
				"required": [
					"forename"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"username": "tester"
				}
			},
			"GetIdResponseData": {
				"properties": {
					"id": {
						"type": "string",
						"description": "The user's id",
						"example": "52907745-7672-470e-a803-a2f8feb52944",
						"maxLength": 36
					}
				},
				"required": [
					"id"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetIdResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/GetIdResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserMailNotFoundError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1030 | Error when user not found by mail."
			},
			"LoginResponseData": {
				"properties": {
					"created": {
						"type": "string",
						"description": "The datetime string when the account was created.",
						"format": "date"
					},
					"id": {
						"type": "string",
						"description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
						"format": "uuid",
						"pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
					},
					"lastModified": {
						"type": "string",
						"description": "The datetime string when the account was last modified.",
						"format": "date"
					},
					"token": {
						"type": "string",
						"description": "JWT access token."
					}
				},
				"required": [
					"created",
					"id",
					"lastModified",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostLoginResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/LoginResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UsernameOrMailRequiredError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1049 | Error when email or password is missing"
			},
			"PasswordWrongError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1025 | Error when password or mail is wrong."
			},
			"GetAuditError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1028 | Error when getting audit from database."
			},
			"PostLoginRequest": {
				"description": "The user login request.",
				"properties": {
					"username": {
						"type": "string",
						"description": "The user's email address (mutual exclusive with username)",
						"example": "tester",
						"maxLength": 40
					},
					"email": {
						"type": "string",
						"description": "The user's username (mutual exclusive with username)",
						"example": "tester@clippic.app",
						"maxLength": 200
					},
					"pass": {
						"type": "string",
						"description": "The users password.",
						"example": "Test1234#!"
					}
				},
				"required": [
					"pass"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"email": "tester@clippic.app",
					"pass": "Test1234#!"
				}
			},
			"ClippicResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PasswordInvalidError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1033 | Error when password is not passing security RegEx."
			},
			"PutPasswordRequest": {
				"description": "Update the users password.",
				"properties": {
					"pass": {
						"type": "string",
						"description": "The user's password.",
						"example": "Test1234#!"
					}
				},
				"required": [
					"pass"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"pass": "Test1234#!"
				}
			},
			"SignupResponseData": {
				"properties": {
					"id": {
						"type": "string",
						"description": "Stringified UUIDv4.\nSee [RFC 4112](https://tools.ietf.org/html/rfc4122)",
						"format": "uuid",
						"pattern": "[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-4[0-9A-Fa-f]{3}-[89ABab][0-9A-Fa-f]{3}-[0-9A-Fa-f]{12}"
					},
					"token": {
						"type": "string",
						"description": "JWT access token."
					}
				},
				"required": [
					"id",
					"token"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PostSignupResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/SignupResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UsernameAlreadyExistsError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1048 | Error when username already exists."
			},
			"IdAlreadyExistsError": {
				"$ref": "#/components/schemas/ClippicErrorInterface",
				"description": "1012 | Error when id already exists."
			},
			"PostSignupRequest": {
				"description": "Create a new user account.",
				"properties": {
					"username": {
						"type": "string",
						"description": "The user's email address",
						"example": "tester",
						"maxLength": 40
					},
					"email": {
						"type": "string",
						"description": "The user's username",
						"example": "tester@clippic.app",
						"maxLength": 200
					},
					"pass": {
						"type": "string",
						"description": "The user's password.",
						"example": "Test1234#!"
					}
				},
				"required": [
					"username",
					"email",
					"pass"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"email": "tester@clippic.app",
					"username": "tester",
					"pass": "Test1234#!"
				}
			},
			"GetSurnameResponseData": {
				"properties": {
					"surname": {
						"type": "string",
						"description": "The user's surname",
						"example": "tester",
						"maxLength": 100
					}
				},
				"required": [
					"surname"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetSurnameResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/GetSurnameResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutSurnameResponseData": {
				"properties": {
					"surname": {
						"type": "string",
						"description": "The user's surname",
						"example": "tester",
						"maxLength": 100
					}
				},
				"required": [
					"surname"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutSurnameResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/PutSurnameResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutSurnameRequest": {
				"description": "Create or update the users surname",
				"properties": {
					"surname": {
						"type": "string",
						"description": "The user's surname",
						"example": "tester",
						"minLength": 1,
						"maxLength": 100
					}
				},
				"required": [
					"surname"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"surname": "tester"
				}
			},
			"GetUsernameResponseData": {
				"properties": {
					"username": {
						"type": "string",
						"description": "The user's username",
						"example": "tester",
						"maxLength": 40
					}
				},
				"required": [
					"username"
				],
				"type": "object",
				"additionalProperties": false
			},
			"GetUsernameResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/GetUsernameResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutUsernameResponseData": {
				"properties": {
					"username": {
						"type": "string",
						"description": "The user's username",
						"example": "tester",
						"maxLength": 40
					}
				},
				"required": [
					"username"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutUsernameResponse": {
				"properties": {
					"status": {
						"type": "string",
						"description": "Respose status, either \"error\" or \"success\""
					},
					"message": {
						"type": "string",
						"description": "Custom response message."
					},
					"data": {
						"items": {
							"$ref": "#/components/schemas/PutUsernameResponseData"
						},
						"type": "array"
					},
					"code": {
						"type": "integer",
						"format": "int32",
						"description": "HTTP code or custom error code."
					},
					"trace": {
						"type": "string",
						"description": "OpenTracing tracing id for request."
					}
				},
				"required": [
					"status",
					"code",
					"trace",
					"data"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PutUsernameRequest": {
				"description": "Create or update the users username",
				"properties": {
					"username": {
						"type": "string",
						"description": "The user's username",
						"example": "tester",
						"minLength": 6,
						"maxLength": 40
					}
				},
				"required": [
					"username"
				],
				"type": "object",
				"additionalProperties": false,
				"example": {
					"username": "tester"
				}
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "@clippic/user-v2",
		"version": "0.0.0",
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/health": {
			"get": {
				"operationId": "SendOK",
				"responses": {
					"200": {
						"description": ""
					}
				},
				"description": "This route is used for Health checks and is just returning '200' code.",
				"tags": [
					"Health"
				],
				"security": [],
				"parameters": []
			}
		},
		"/": {
			"get": {
				"operationId": "GetNotAllowed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Not allowed"
					}
				},
				"description": "This routes are sending a '403 - Not allowed' for all methods on '/'.",
				"tags": [
					"Index"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "PostNotAllowed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Not allowed"
					}
				},
				"tags": [
					"Index"
				],
				"security": [],
				"parameters": []
			},
			"put": {
				"operationId": "PutNotAllowed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Not allowed"
					}
				},
				"tags": [
					"Index"
				],
				"security": [],
				"parameters": []
			},
			"patch": {
				"operationId": "PatchNotAllowed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Not allowed"
					}
				},
				"tags": [
					"Index"
				],
				"security": [],
				"parameters": []
			},
			"delete": {
				"operationId": "DeleteNotAllowed",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"type": "string"
								}
							}
						}
					},
					"403": {
						"description": "Not allowed"
					}
				},
				"tags": [
					"Index"
				],
				"security": [],
				"parameters": []
			}
		},
		"/v2/users/audit": {
			"get": {
				"operationId": "GetAuditRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAuditResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"user_id": "551efd1e-77c1-49a1-9a9b-c7fa15ce6acf",
													"modified": "2022-11-06T11:14:00.000Z",
													"created": "2022-11-06T11:14:00.000Z",
													"username": null,
													"forename": null,
													"surname": null,
													"email": null,
													"hash": null,
													"billing": null,
													"shipping": null,
													"quota": null
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will return the user's last modified dates.",
				"tags": [
					"Audit"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/users/email": {
			"get": {
				"operationId": "GetEmailRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetEmailResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"email": "test@clippic.app"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will return the user's Email.",
				"tags": [
					"Email"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "PutEmailRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PutEmailResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"email": "testnew@clippic.app"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MailFormatError"
								}
							}
						}
					}
				},
				"description": "This request will update the user's email.\n\n**Errors:**\n\n| Code | Description                 |\n|------|-----------------------------|\n| 400  | AccountAlreadyExistsError   |\n| 400  | MailFormatError             |",
				"tags": [
					"Email"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutEmailRequest"
							}
						}
					}
				}
			}
		},
		"/v2/users/forename": {
			"get": {
				"operationId": "GetForenameRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetForenameResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"forename": "tester"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will return the user's forename.",
				"tags": [
					"Forename"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "PutForenameRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PutForenameResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"forename": "tester"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will update or create if not exists the user's forename.",
				"tags": [
					"Forename"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutForenameRequest"
							}
						}
					}
				}
			}
		},
		"/v2/users/id": {
			"get": {
				"operationId": "GetIdByEMailRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetIdResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"id": "52907745-7672-470e-a803-a2f8feb52944"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserMailNotFoundError"
								}
							}
						}
					}
				},
				"description": "This request will return the id of any kind of user by its email address. This can not be used to fetch your own\nuser id cause this route requires authorization.\n\n**Errors:**\n\n| Code | Description                 |\n|------|-----------------------------|\n| 400  | UserMailNotFoundError       |",
				"tags": [
					"Id"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/users/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Login succeeded",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PostLoginResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "Login succeeded",
											"data": [
												{
													"created": "2021-01-09T21:40:37.000Z",
													"id": "52907745-7672-470e-a803-a2f8feb52944",
													"lastModified": "2021-04-26T14:57:18.000Z",
													"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetAuditError"
								}
							}
						}
					}
				},
				"description": "This request will login a user and return a JWT Token.\n\n**Errors:**\n\n| Code | Description                 |\n|------|-----------------------------|\n| 400  | MailFormatError             |\n| 400  | UsernameOrMailRequiredError |\n| 400  | PasswordWrongError          |\n| 400  | GetAuditError               |",
				"tags": [
					"Login"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostLoginRequest"
							}
						}
					}
				}
			}
		},
		"/v2/users/password": {
			"put": {
				"operationId": "ChangePassword",
				"responses": {
					"200": {
						"description": "Password changed successfully",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClippicResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "Password changed successfully",
											"data": [],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PasswordInvalidError"
								}
							}
						}
					}
				},
				"description": "This request will update users password.\n\n**Errors:**\n\n| Code | Description                 |\n|------|-----------------------------|\n| 400  | PasswordInvalidError        |",
				"tags": [
					"Password"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutPasswordRequest"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ForgotPassword",
				"responses": {
					"200": {
						"description": "Password reset instructions has been sent if email address is registered.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ClippicResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "Password reset instructions has been sent if email address is registered.",
											"data": [],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will reset passwort after forgotten.",
				"tags": [
					"Password"
				],
				"security": [],
				"parameters": [
					{
						"in": "header",
						"name": "email",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/v2/users/signup": {
			"post": {
				"operationId": "Signup",
				"responses": {
					"200": {
						"description": "Account creation succeeded",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PostSignupResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "Account creation succeeded",
											"data": [
												{
													"id": "52907745-7672-470e-a803-a2f8feb52944",
													"token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IdAlreadyExistsError"
								}
							}
						}
					}
				},
				"description": "This request will create a new user account.\n\n**Errors:**\n\n| Code | Description                 |\n|------|-----------------------------|\n| 400  | MailFormatError             |\n| 400  | AccountAlreadyExistsError   |\n| 400  | UsernameAlreadyExistsError  |\n| 400  | IdAlreadyExistsError        |",
				"tags": [
					"Signup"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PostSignupRequest"
							}
						}
					}
				}
			}
		},
		"/v2/users/surname": {
			"get": {
				"operationId": "GetSurnameRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetSurnameResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"surname": "tester"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will return the user's surname.",
				"tags": [
					"Surname"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "PutSurnameRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PutSurnameResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"surname": "tester"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will update or create if not exists the user's surname.",
				"tags": [
					"Surname"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutSurnameRequest"
							}
						}
					}
				}
			}
		},
		"/v2/users/username": {
			"get": {
				"operationId": "GetUsernameRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GetUsernameResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"username": "tester"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					}
				},
				"description": "This request will return the user's username.",
				"tags": [
					"Username"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			},
			"put": {
				"operationId": "PutUsernameRequest",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PutUsernameResponse"
								},
								"examples": {
									"Example 1": {
										"value": {
											"status": "success",
											"message": "",
											"data": [
												{
													"username": "tester"
												}
											],
											"code": 200,
											"trace": "4ba373202a8e4807"
										}
									}
								}
							}
						}
					},
					"400": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UsernameAlreadyExistsError"
								}
							}
						}
					}
				},
				"description": "This request will update or create if not exists the user's username.\n\n**Errors:**\n\n| Code | Description                 |\n|------|-----------------------------|\n| 400  | UsernameAlreadyExistsError  |",
				"tags": [
					"Username"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "header",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PutUsernameRequest"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}