include:
  - template: "Jobs/SAST.gitlab-ci.yml"
  - template: "Jobs/Container-Scanning.gitlab-ci.yml"

stages:
  - "prepare"
  - "build"
  - "test"
  - "lint"
  - "deploy"
  - "release"

.common-semantic-release:
  except:
    - "triggers"
    - "tags"
  image: "registry.clippic.app/infrastructure/semantic-release:latest"
  stage: "prepare"
  variables:
    GIT_STRATEGY: "clone"

prepare:
  artifacts:
    reports:
      dotenv: "${CI_PROJECT_DIR}/deploy.env"
  extends: ".common-semantic-release"
  needs: []
  script:
    - echo RELEASE_VERSION=$(semantic-release --dry-run --branches $CI_COMMIT_REF_NAME --plugins "@semantic-release/gitlab" | grep -oP "Published release [0-9]+\.[0-9]+\.[0-9]+ on" | grep -oP "[0-9]+\.[0-9]+\.[0-9]+") > ${CI_PROJECT_DIR}/deploy.env
    - "cat ${CI_PROJECT_DIR}/deploy.env"
  stage: "prepare"
  variables:
    GIT_SUBMODULE_STRATEGY: none
    GIT_STRATEGY: clone
    GIT_DEPTH: "500"



build:
  dependencies:
    - "prepare"
  needs:
    - "prepare"
  stage: "build"
  image:
    name: "registry.clippic.app/open/images/kaniko:debug"
    entrypoint: [ "" ]
  before_script:
    - "mkdir -p /kaniko/.docker"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(echo -n $CI_DEPENDENCY_PROXY_USER:$CI_DEPENDENCY_PROXY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination $CI_REGISTRY_IMAGE:${RELEASE_VERSION}-${CI_COMMIT_REF_SLUG}
      --build-arg CI_JOB_TOKEN=${CI_JOB_TOKEN}
      --build-arg APP_VERSION=${RELEASE_VERSION}

container_scanning:
  needs:
    - "prepare"
    - "build"
  dependencies:
    - "prepare"
  variables:
    CS_IMAGE: "$CI_REGISTRY_IMAGE:${RELEASE_VERSION}-${CI_COMMIT_REF_SLUG}"


test:
  artifacts:
    when: "always"
    reports:
      junit:
        - "junit.xml"
  before_script:
    - "npm i"
    - "npm run build"
    - "cp ${FCM_SERVICE_ACCOUNT} ${CI_PROJECT_DIR}/serviceAccountKey.json"
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  image: "registry.clippic.app/open/images/node:18-lts-alpine"
  needs: []
  script:
    - "npm run test:ci"
  services:
    - name: "registry.clippic.app/open/images/mariadb:10.11.2"
      variables:
        MARIADB_USER: "jest"
        MARIADB_PASSWORD: "jest"
        MARIADB_ROOT_PASSWORD: "test12345"
        MARIADB_DATABASE: "users"
  stage: "test"
  variables:
    JAEGER_ENDPOINT: "https://jaeger-api.brained.io/api/traces"
    SMTP_PASS: "password"
    SMTP_PORT: "465"
    SMTP_SERVER: "localhost"
    SMTP_USER: "notifications@clippic.app"
    VIDEO_BACKEND: "http://localhost:3001/"
    ORDER_BACKEND: "http://localhost:3003/"
    NODE_ENV: "jest"

eslint:
  artifacts:
    when: "always"
    reports:
      codequality:
        - "gl-codequality.json"
  before_script:
    - "npm i"
  image: "registry.clippic.app/open/images/node:18-lts-alpine"
  needs: []
  script:
    - "npx eslint --format gitlab ."
  stage: "lint"

.deploy:
  before_script:
    - "cp ${FCM_SERVICE_ACCOUNT} ${CI_PROJECT_DIR}/charts/user/files/serviceAccountKey.json"
  dependencies:
    - "prepare"
  environment:
    name: "${CI_COMMIT_REF_NAME}"
    url: "https://${DOMAIN}/v2/user/docs"
  image:
    name: "registry.clippic.app/open/images/helm:3.11.3"
    entrypoint: [""]
  needs:
    - "build"
    - "prepare"
  script:
    - >
      helm upgrade
      --install
      --namespace "clippic-${CI_COMMIT_REF_NAME}"
      --create-namespace
      --kube-context clippic/gitlab-agent:clippic-agent-1
      --set database.name=${DATABASE_NAME}
      --set database.user=${DATABASE_USER}
      --set database.pass=${DATABASE_PASSWORD}
      --set smtp.pass=${SMTP_PASS}
      --set ingress.host=${DOMAIN}
      --set imagePullSecret.password=${DEPLOY_TOKEN_PASSWORD}
      --set image.tag=${IMAGE_TAG}
      --set additionalLabels.commit="${CI_COMMIT_SHA}"
      user
      charts/user
  stage: "deploy"

deploy-dev:
  extends: ".deploy"
  only:
    - "dev"
  variables:
    DOMAIN: "api-dev.clippic.app"
    DATABASE_NAME: "dev_clippic_user_v2"
    DATABASE_USER: "clippic_dev"
    DATABASE_PASSWORD: "${DEV_DATABASE_PASSWORD}"
    IMAGE_TAG: "${RELEASE_VERSION}-${CI_COMMIT_REF_NAME}"

deploy-main:
  extends: ".deploy"
  only:
    - "main"
  variables:
    DOMAIN: "api.clippic.app"
    DATABASE_NAME: "clippic_user"
    DATABASE_USER: "clippic_prod"
    DATABASE_PASSWORD: "${MAIN_DATABASE_PASSWORD}"
    IMAGE_TAG: "${RELEASE_VERSION}"

release:
  dependencies:
    - "prepare"
  except:
    - "web"
  extends: ".common-semantic-release"
  needs:
    - "prepare"
    - "build"
  only:
    - "dev"
  script:
    - "npm version --allow-same-version --no-commit-hooks --no-git-tag-version ${RELEASE_VERSION}"
    - "semantic-release"
  stage: "release"
  variables:
    GIT_SUBMODULE_STRATEGY: "none"
    GIT_STRATEGY: "clone"
    GIT_DEPTH: "500"
