stages:
  - "prepare"
  - "build"
  - "deploy"
  - "release"

.common-semantic-release:
  except:
    - "triggers"
    - "tags"
  image: "registry.clippic.app/infrastructure/semantic-release:latest"
  stage: "prepare"
  variables:
    GIT_STRATEGY: "clone"

prepare:
  artifacts:
    reports:
      dotenv: "${CI_PROJECT_DIR}/deploy.env"
  extends: ".common-semantic-release"
  script:
    - echo RELEASE_VERSION=$(semantic-release --dry-run --branches $CI_COMMIT_REF_NAME --plugins "@semantic-release/gitlab" | grep -oP "Published release [0-9]+\.[0-9]+\.[0-9]+ on" | grep -oP "[0-9]+\.[0-9]+\.[0-9]+") > ${CI_PROJECT_DIR}/deploy.env
    - "cat ${CI_PROJECT_DIR}/deploy.env"
  stage: "prepare"
  variables:
    GIT_SUBMODULE_STRATEGY: none
    GIT_STRATEGY: clone
    GIT_DEPTH: "500"

build:
  dependencies:
    - "prepare"
  stage: "build"
  image:
    name: "gcr.io/kaniko-project/executor:debug"
    entrypoint: [ "" ]
  before_script:
    - "mkdir -p /kaniko/.docker"
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD | base64)\"},\"$(echo -n $CI_DEPENDENCY_PROXY_SERVER | awk -F[:] '{print $1}')\":{\"auth\":\"$(echo -n $CI_DEPENDENCY_PROXY_USER:$CI_DEPENDENCY_PROXY_PASSWORD | base64)\"}}}" > /kaniko/.docker/config.json
  only:
    - "dev"
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination $CI_REGISTRY_IMAGE:${RELEASE_VERSION}
      --registry-mirror gitlab.clippic.app/clippic/backend/dependency_proxy/containers/
      --build-arg CI_JOB_TOKEN=${CI_JOB_TOKEN}
      --build-arg APP_VERSION=${RELEASE_VERSION}

.deploy:
  stage: "deploy"
  image:
    name: "${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/alpine/helm"
    entrypoint: [""]
  before_script:
    - "kubectl config use-context clippic/gitlab-agent:clippic-agent-1"
    - "cp ${FCM_SERVICE_ACCOUNT} ${CI_PROJECT_DIR}/files/serviceAccountKey.json"
  environment:
    name: "${CI_COMMIT_REF_NAME}"
    url: "https://${DOMAIN}/v2/user/docs"
  script:
    - >
      helm upgrade
      --install
      --namespace ${NAMESPACE}
      --create-namespace
      --set database.name=${DATABASE_NAME}
      --set database.user=${DATABASE_USER}
      --set database.pass=${DATABASE_PASSWORD}
      --set smtp.pass=${SMTP_PASS} 
      --set ingress.hosts[0].host=${DOMAIN}
      --set imagePullSecret.password=${DEPLOY_TOKEN_PASSWORD}
      --set image.tag=${RELEASE_VERSION}
      user 
      charts/user

deploy-dev:
  extends: ".deploy"
  only:
    - "dev"
  variables:
    DOMAIN: "api-dev.clippic.app"
    DATABASE_NAME: "dev_clippic_user"
    DATABASE_USER: "clippic_dev"
    DATABASE_PASSWORD: "${DEV_DATABASE_PASSWORD}"

deploy-main:
  extends: ".deploy"
  only:
    - "main"
  variables:
    DOMAIN: "api.clippic.app"
    DATABASE_NAME: "clippic_user"
    DATABASE_USER: "clippic_prod"
    DATABASE_PASSWORD: "${MAIN_DATABASE_PASSWORD}"

release:
  dependencies:
    - "prepare"
  except:
    - "web"
  extends: ".common-semantic-release"
  only:
    - "main"
  script:
    - "npm version --allow-same-version --no-commit-hooks --no-git-tag-version ${RELEASE_VERSION}"
    - "semantic-release"
  stage: "release"
  variables:
    GIT_SUBMODULE_STRATEGY: "none"
    GIT_STRATEGY: "clone"
    GIT_DEPTH: "500"
